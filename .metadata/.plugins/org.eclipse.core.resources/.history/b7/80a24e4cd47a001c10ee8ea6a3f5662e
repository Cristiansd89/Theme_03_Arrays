package Pre_Recu;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;



public class Pre_Recu {
	
	private static Connection conector;

	public static void main(String[] args) {
		//datos_empleado(105);
		transladar_departamento(8, 1700);

	}
	
	
	
	public static void datos_empleado(int numEmpleado) {
		
		/*
		 * Con la Clase estatica creada  llamamos a la conexion
		 */
		 conector = Conexion.conectar();
		 
		 String query = "select t2.job_title as Cargo, concat(t3.first_name,' ', t3.last_name) as jefe, t4.department_name as Nombre_Departamento, t5.city as ubicacion_departamento from employees t1 join jobs t2 on t1.job_id = t2.job_id join employees t3 on t3.employee_id = t1.manager_id join departments t4 on t1.department_id = t4.department_id join locations t5 on t4.location_id = t5.location_id where t1.employee_id =?"; 
				 
		try {
			PreparedStatement sql = conector.prepareStatement(query, ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);// Establecemos la conexion 
			sql.setInt(1, numEmpleado); // Le decimos que en el primer interrogante Introduzcamos el numero de empleado	
			
			ResultSet res = sql.executeQuery(); // Cargamos la query
			
			res.last(); // Coloca el puntero en la ultima posicion
			int n = res.getRow(); // Me devuelve un numero de filas leidas por la query
			
			if(n == 0) {
				System.out.print("Ese empleado no existe");
			}else if (n ==1){
				res.beforeFirst();
				while(res.next()){
					System.out.println(" Cargo : "+res.getString(1)+ " Responsable : " +res.getString(2)+" Departamento :"+res.getString(3)+" Ciudad : "+res.getString(4));
				}
				
			}
			 conector.close();
		} catch (SQLException e) {
			System.out.println("Ha ocurrido un error ");
			System.out.println("Codigo del Error : "+ e.getErrorCode());
			System.out.println("Mensaje :  "  +e.getMessage());
			System.out.println("Estado : " + e.getSQLState());
		}
		
	}
	
	
	public static void transladar_departamento(int dep_orig, int loc_orig) {
		Scanner ent = new Scanner(System.in);
		
		conector = Conexion.conectar(); // Abrirmos la conexion con la BBDD
		 
		 String query = "select t1.department_name as nombre, t2.city as ciudad,t3.country_name as pais from departments t1 join locations t2 on t1.location_id = t2.location_id join countries t3 on t2.country_id = t3.country_id where t1.department_id =?"; 
		 try {
			
			 PreparedStatement sql = conector.prepareStatement(query, ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
			 sql.setInt(1, dep_orig);  // Insertamos en el primer Interrogante el numero de departamento
		 
			 ResultSet res = sql.executeQuery(); // Cargamos la query
			 
			 res.last(); // Coloca el puntero en la ultima posicion
			 int n = res.getRow(); // Me devuelve un numero de filas leidas por la query
			 
			 if(n ==0) {
				 System.out.print("Ese departamento no existe");
			 }else if (n == 1) {
				 res.beforeFirst();
				 while(res.next()) {
					 System.out.println("Nombre Deparmento :" +res.getString(1));
					 System.out.println("Ciudad Origen  " +res.getString(2) + " || Pais Origen " +res.getString(3));
				 
				 
				 System.out.println("Quieres Transladar la oficina : ");
				 String resp = ent.next();
				 
				 if(resp.equalsIgnoreCase("si")) {
					 
					 System.out.println("Localizacion destino :");
					 int loc_des = ent.nextInt();
					 
					 
					 String query2 = "UPDATE departments SET location_id =? where location_id =? and department_id=?" ;
							 
					 PreparedStatement sql2 = conector.prepareStatement(query2, ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
					 
					 
					 sql2.setInt(1,loc_des);
					 sql2.setInt(2,loc_orig);
					 sql2.setInt(3,dep_orig);
					 
					 sql2.executeUpdate();
					 
					 
					 String query3 = "select t1.department_name as nombre, t2.city as ciudad,t3.country_name as pais from departments t1 join locations t2 on t1.location_id = t2.location_id join countries t3 on t2.country_id = t3.country_id where t1.department_id =?"; 
					 PreparedStatement sql3 = conector.prepareStatement(query3, ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
					 sql3.setInt(1, loc_des);  // Insertamos en el primer Interrogante el numero de departamento
					 
					 ResultSet res3 = sql3.executeQuery(); // Cargamos la query
					 
					 while(res3.next()) {
						 res3.beforeFirst();
						 System.out.println("Ciudad Destino  " +res3.getString(2) + " || Pais Destino " +res3.getString(3));
					 
					 }
					 
				 }else {
					 
				 }
				 

				}	
			 }
			 
		 } catch (SQLException e) {
			System.out.println("Ha ocurrido un error ");
			System.out.println("Codigo del Error : "+ e.getErrorCode());
			System.out.println("Mensaje :  "  +e.getMessage());
			System.out.println("Estado : " + e.getSQLState());
			e.printStackTrace();
		}
		 
		 }
		 
	
	
		 
	
	

	
	
	/*
	 * Creamos una clase tipo Conexion para establecer la conexion
	 */
	public static class Conexion {
		
		/*
		 * Atributos
		 */
		private static String url;
		private static String usuario;
		private static String password;
		private static Connection conect = null;
		
		public static Connection conectar() {
			/*
			 * Inicializamos las variableas
			 */
			
			try {
				url = "jdbc:mysql://localhost:3306/examen"; 
				usuario = "examen";
				password = "Abcd1234+";
				conect = DriverManager.getConnection(url,usuario,password);
				
				System.out.println("Conexion Establecida");
				
				
				
			} catch (SQLException e) {
				System.err.println("Error en la conexion "+ e.getMessage());
				e.printStackTrace();
			}
			
			 return conect;
		}
			
			
	}

	
	

}



